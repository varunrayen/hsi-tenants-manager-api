name: Build and Push to ECR - UAT

on:
  push:
    branches: ["main"]

concurrency:
  group: ecr-${{ github.ref_name }}
  cancel-in-progress: true

env:
  # Change this to your ECR repository name or set a repo variable named ECR_REPOSITORY
  ECR_REPOSITORY: hopstack/tenant-management-api
  DOCKERFILE: Dockerfile
  CONTEXT: .

jobs:
  build-and-push:
    name: Build and Push Image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          
          # If you prefer OIDC, remove the two key/secret lines above and instead set:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_SBX }}
          role-session-name: gh-actions-${{ github.run_id }}
          aws-region: "ap-southeast-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        shell: bash
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          set -euo pipefail
          if ! aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1; then
            echo "Creating ECR repository: $ECR_REPOSITORY"
            aws ecr create-repository \
              --repository-name "$ECR_REPOSITORY" \
              --image-scanning-configuration scanOnPush=true >/dev/null
          else
            echo "ECR repository already exists: $ECR_REPOSITORY"
          fi

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=raw,value=uat
            type=sha,format=short,prefix=

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT }}
          file: ${{ env.DOCKERFILE }}
          push: true
          platforms: linux/amd64
          provenance: false
          sbom: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo "Pushed image digest ${{ steps.build-and-push.outputs.digest }}"

      - name: Summary
        run: |
          echo "### ECR Push Complete" >> $GITHUB_STEP_SUMMARY
          echo "- Registry: ${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_STEP_SUMMARY
          echo "- Repository: $ECR_REPOSITORY" >> $GITHUB_STEP_SUMMARY
          echo "- Tags:" >> $GITHUB_STEP_SUMMARY
          echo "\n\n\`\n${{ steps.meta.outputs.tags }}\n\`" >> $GITHUB_STEP_SUMMARY
